# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage
from clams_processing import clean_all_clams_data, trim_all_clams_data, process_directory


OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"/home/user/build/assets/frame0")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


def main_process_clams_data():
    """Main function to process all CLAMS data files in the provided directory.

    Parameters:
    directory_path (string): directory containing .csv files to process
    trim_hours (int): number of hours to trim from the beginning of the cleaned data
    keep_hours (int): number of hours to keep in the trimmed data
    bin_hours (int): number of hours to bin the data

    Returns:
    Nothing. Prints progress and saves processed files to respective directories.
    """
    # directory_path, trim_hours, keep_hours, bin_hours
    directory_path = entry_4.get()
    trim_hours = int(entry_1.get())
    keep_hours = int(entry_2.get())
    bin_hours = int(entry_3.get())

    output_text.insert("end", "Cleaning all CLAMS data...\n")
    clean_all_clams_data(directory_path)

    output_text.insert("end", "\nTrimming all cleaned CLAMS data...\n")
    trim_all_clams_data(directory_path, trim_hours, keep_hours)

    output_text.insert("end", "\nBinning all trimmed CLAMS data...\n")
    process_directory(directory_path, bin_hours)

    output_text.insert("end", "\nAll CLAMS files processed successfully!")


window = Tk()

window.title("CLAMSwrangler")
window.geometry("800x600")
window.configure(bg = "#3F3CD6")


canvas = Canvas(
    window,
    bg = "#3F3CD6",
    height = 600,
    width = 800,
    bd = 0,
    highlightthickness = 0,
    relief = "ridge"
)

canvas.place(x = 0, y = 0)
canvas.create_rectangle(
    325.0,
    73.0,
    800.0,
    573.0,
    fill="#D9D9D9",
    outline="")

canvas.create_text(
    347.0,
    256.0,
    anchor="nw",
    text="Bin hours:",
    fill="#000000",
    font=("LeagueSpartan Regular", 16 * -1)
)

canvas.create_text(
    347.0,
    197.0,
    anchor="nw",
    text="Keep hours:",
    fill="#000000",
    font=("LeagueSpartan Regular", 16 * -1)
)

entry_image_1 = PhotoImage(
    file=relative_to_assets("entry_1.png"))
entry_bg_1 = canvas.create_image(
    563.5,
    168.5,
    image=entry_image_1
)
entry_1 = Entry(
    bd=0,
    bg="#D9D9D9",
    fg="#000716",
    highlightthickness=0
)
entry_1.place(
    x=340.0,
    y=156.0,
    width=447.0,
    height=23.0
)

entry_image_2 = PhotoImage(
    file=relative_to_assets("entry_2.png"))
entry_bg_2 = canvas.create_image(
    563.5,
    227.5,
    image=entry_image_2
)
entry_2 = Entry(
    bd=0,
    bg="#D9D9D9",
    fg="#000716",
    highlightthickness=0
)
entry_2.place(
    x=340.0,
    y=215.0,
    width=447.0,
    height=23.0
)

entry_image_3 = PhotoImage(
    file=relative_to_assets("entry_3.png"))
entry_bg_3 = canvas.create_image(
    563.5,
    287.5,
    image=entry_image_3
)
entry_3 = Entry(
    bd=0,
    bg="#D9D9D9",
    fg="#000716",
    highlightthickness=0
)
entry_3.place(
    x=340.0,
    y=275.0,
    width=447.0,
    height=23.0
)

canvas.create_text(
    400.0,
    20.0,
    anchor="center",
    text="CLAMSwrangler",
    fill="#FFFFFF",
    font=("LeagueSpartan Regular", 48 * -1)
)

canvas.create_text(
    347.0,
    81.0,
    anchor="nw",
    text="CSV directory:",
    fill="#000000",
    font=("LeagueSpartan Regular", 16 * -1)
)

entry_image_4 = PhotoImage(
    file=relative_to_assets("entry_4.png"))
entry_bg_4 = canvas.create_image(
    563.5,
    111.5,
    image=entry_image_4
)
entry_4 = Entry(
    bd=0,
    bg="#D9D9D9",
    fg="#000716",
    highlightthickness=0
)
entry_4.place(
    x=340.0,
    y=99.0,
    width=447.0,
    height=23.0
)

canvas.create_text(
    347.0,
    140.0,
    anchor="nw",
    text="Trim hours:",
    fill="#000000",
    font=("LeagueSpartan Regular", 16 * -1)
)

canvas.create_rectangle(
    476.0,
    317.0,
    651.0,
    357.0,
    fill="#3F3CD6",
    outline="")

canvas.create_text(
    496.0,
    330.0,
    anchor="nw",
    text="Process CLAMS data",
    fill="#FFFFFF",
    font=("LeagueSpartan Regular", 16 * -1)
)

canvas.create_text(
    340.0,
    372.0,
    anchor="nw",
    text="Output:",
    fill="#000000",
    font=("LeagueSpartan Regular", 16 * -1)
)

canvas.create_text(
    13.0,
    581.0,
    anchor="nw",
    text="Developed by Pistilli Lab. Credits: Alan Mizener, Lauren Rentz, Stuart Clayton.",
    fill="#FFFFFF",
    font=("LeagueSpartan Regular", 16 * -1)
)

canvas.create_text(
    8.0,
    75.0,
    anchor="nw",
    text="Instructions:\n\n1. Enter the path to the directory containing all of \nthe .CSV CLAMS data files you wish to process.\n2. Enter the number of hours you wish to trim from \nthe beginning of the data.\n\tRecommended at least 24 hours. The data will \n\tbe kept starting at the next light cycle \n\tchange following this point.\n3. Enter the number of hours of data you wish to \nkeep of CLAMS data to be used downstream.\n4. Enter the size of the bin in hours.\n\tMust be a factor of 12.\n5. Click “Process CLAMS data”.\n\nCongratulations! You saved hours of menial labor! :D\n\n",
    fill="#FFFFFF",
    font=("LeagueSpartan Regular", 16 * -1)
)

# Create a Text widget to display the output
output_text = Text(
    window,
    bg="#D9D9D9",
    width=60,
    height=10
)
output_text.place(x=340.0, y=400.0)

# Create a button to start processing
process_button = Button(
    window,
    text="Process CLAMS data",
    command=main_process_clams_data,
    bg="#3F3CD6",
    fg="#FFFFFF",
    font=("LeagueSpartan Regular", 16)
)
process_button.place(x=476.0, y=317.0, width=175.0, height=40.0)

window.resizable(False, False)
window.mainloop()
